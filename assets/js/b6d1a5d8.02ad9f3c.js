"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[57464],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(r),c=n,m=d["".concat(p,".").concat(c)]||d[c]||y[c]||i;return r?a.createElement(m,l(l({ref:t},u),{},{components:r})):a.createElement(m,l({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},98985:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});r(96540);var a=r(15680);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const o={sidebar_position:39,title:"Structured Property",slug:"/generated/metamodel/entities/structuredproperty-datahub",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/structuredProperty-datahub.md"},p="Structured Property",s={unversionedId:"docs/generated/metamodel/entities/structuredProperty-datahub",id:"docs/generated/metamodel/entities/structuredProperty-datahub",title:"Structured Property",description:"Structured Properties are custom, typed metadata fields that can be attached to any entity type in DataHub. They enable organizations to extend the core metadata model with domain-specific attributes that support governance, compliance, and data discovery initiatives.",source:"@site/genDocs/docs/generated/metamodel/entities/structuredProperty-datahub.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/structuredproperty-datahub",permalink:"/docs/generated/metamodel/entities/structuredproperty-datahub",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/structuredProperty-datahub.md",tags:[],version:"current",sidebarPosition:39,frontMatter:{sidebar_position:39,title:"Structured Property",slug:"/generated/metamodel/entities/structuredproperty-datahub",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/structuredProperty-datahub.md"},sidebar:"overviewSidebar",previous:{title:"DataType",permalink:"/docs/generated/metamodel/entities/datatype"},next:{title:"Structured Property",permalink:"/docs/generated/metamodel/entities/structuredproperty"}},u={},d=[{value:"Identity",id:"identity",level:2},{value:"Important Capabilities",id:"important-capabilities",level:2},{value:"Property Definition",id:"property-definition",level:3},{value:"Type System",id:"type-system",level:4},{value:"Type Qualifiers",id:"type-qualifiers",level:4},{value:"Cardinality",id:"cardinality",level:4},{value:"Entity Type Restrictions",id:"entity-type-restrictions",level:4},{value:"Validation Through Allowed Values",id:"validation-through-allowed-values",level:4},{value:"Immutability",id:"immutability",level:4},{value:"Versioning",id:"versioning",level:4},{value:"Display Settings",id:"display-settings",level:3},{value:"Common Aspects",id:"common-aspects",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"Create a Structured Property",id:"create-a-structured-property",level:3},{value:"Create a Structured Property with Entity Type Restrictions",id:"create-a-structured-property-with-entity-type-restrictions",level:3},{value:"Apply Structured Properties to Entities",id:"apply-structured-properties-to-entities",level:3},{value:"Patch Operations on Structured Properties",id:"patch-operations-on-structured-properties",level:3},{value:"Query Structured Property Definitions",id:"query-structured-property-definitions",level:3},{value:"Query via REST API",id:"query-via-rest-api",level:3},{value:"Integration Points",id:"integration-points",level:2},{value:"How Structured Properties Relate to Other Entities",id:"how-structured-properties-relate-to-other-entities",level:3},{value:"Applied to Core Data Assets",id:"applied-to-core-data-assets",level:4},{value:"Applied to Organizational Entities",id:"applied-to-organizational-entities",level:4},{value:"Relationship with Forms",id:"relationship-with-forms",level:4},{value:"Search and Discovery",id:"search-and-discovery",level:4},{value:"GraphQL Resolvers",id:"graphql-resolvers",level:4},{value:"Notable Exceptions",id:"notable-exceptions",level:2},{value:"Property Definition Constraints",id:"property-definition-constraints",level:3},{value:"Breaking Changes with Versioning",id:"breaking-changes-with-versioning",level:3},{value:"Soft Delete vs Hard Delete",id:"soft-delete-vs-hard-delete",level:3},{value:"Column-Level Properties",id:"column-level-properties",level:3},{value:"Search Indexing",id:"search-indexing",level:3},{value:"Technical Reference",id:"technical-reference",level:2}],y={toc:d},c="wrapper";function m(e){var{components:t}=e,r=l(e,["components"]);return(0,a.yg)(c,i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){n(e,t,r[t])}))}return e}({},y,r),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"structured-property"},"Structured Property"),(0,a.yg)("p",null,"Structured Properties are custom, typed metadata fields that can be attached to any entity type in DataHub. They enable organizations to extend the core metadata model with domain-specific attributes that support governance, compliance, and data discovery initiatives."),(0,a.yg)("h2",{id:"identity"},"Identity"),(0,a.yg)("p",null,"Structured Properties are identified by a single piece of information:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("strong",{parentName:"li"},"id")," or ",(0,a.yg)("strong",{parentName:"li"},"qualified name")," of the property: This is a unique string identifier that follows a namespace convention, typically using dot notation (e.g., ",(0,a.yg)("inlineCode",{parentName:"li"},"io.acryl.privacy.retentionTime")," or ",(0,a.yg)("inlineCode",{parentName:"li"},"companyName.department.propertyName"),"). The qualified name becomes part of the URN and must be globally unique across all structured properties in your DataHub instance.")),(0,a.yg)("p",null,"An example of a structured property identifier is ",(0,a.yg)("inlineCode",{parentName:"p"},"urn:li:structuredProperty:io.acryl.privacy.retentionTime"),"."),(0,a.yg)("p",null,"Unlike other entities that may require multiple pieces of information (platform, name, environment), structured properties have a simple, flat identity model based solely on their qualified name."),(0,a.yg)("h2",{id:"important-capabilities"},"Important Capabilities"),(0,a.yg)("h3",{id:"property-definition"},"Property Definition"),(0,a.yg)("p",null,"The core metadata for a structured property is captured in the ",(0,a.yg)("inlineCode",{parentName:"p"},"propertyDefinition")," aspect, which defines:"),(0,a.yg)("h4",{id:"type-system"},"Type System"),(0,a.yg)("p",null,"Structured properties support strongly-typed values through the ",(0,a.yg)("inlineCode",{parentName:"p"},"valueType")," field, which must reference a valid ",(0,a.yg)("inlineCode",{parentName:"p"},"dataType")," entity. The supported types are:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"string"),": Text values (plain text)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"rich_text"),": Rich text with formatting"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"number"),": Numeric values (integers or decimals)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"date"),": Date values"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"urn"),": References to other DataHub entities")),(0,a.yg)("p",null,"The type is specified as a URN: ",(0,a.yg)("inlineCode",{parentName:"p"},"urn:li:dataType:datahub.string"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"urn:li:dataType:datahub.number"),", etc."),(0,a.yg)("h4",{id:"type-qualifiers"},"Type Qualifiers"),(0,a.yg)("p",null,"For URN-type properties, you can restrict which entity types are allowed using the ",(0,a.yg)("inlineCode",{parentName:"p"},"typeQualifier")," field. This enables creating properties that reference only specific entity types:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "valueType": "urn:li:dataType:datahub.urn",\n  "typeQualifier": {\n    "allowedTypes": [\n      "urn:li:entityType:datahub.corpuser",\n      "urn:li:entityType:datahub.corpGroup"\n    ]\n  }\n}\n')),(0,a.yg)("h4",{id:"cardinality"},"Cardinality"),(0,a.yg)("p",null,"Structured properties can accept either single or multiple values via the ",(0,a.yg)("inlineCode",{parentName:"p"},"cardinality")," field:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"SINGLE"),": Only one value can be assigned (default)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"MULTIPLE"),": Multiple values can be assigned as an array")),(0,a.yg)("h4",{id:"entity-type-restrictions"},"Entity Type Restrictions"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"entityTypes")," array specifies which entity types this property can be applied to. For example, a property might only be applicable to:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Datasets: ",(0,a.yg)("inlineCode",{parentName:"li"},"urn:li:entityType:datahub.dataset")),(0,a.yg)("li",{parentName:"ul"},"Schema Fields (columns): ",(0,a.yg)("inlineCode",{parentName:"li"},"urn:li:entityType:datahub.schemaField")),(0,a.yg)("li",{parentName:"ul"},"Dashboards: ",(0,a.yg)("inlineCode",{parentName:"li"},"urn:li:entityType:datahub.dashboard")),(0,a.yg)("li",{parentName:"ul"},"Any combination of entity types")),(0,a.yg)("h4",{id:"validation-through-allowed-values"},"Validation Through Allowed Values"),(0,a.yg)("p",null,"To enforce data quality and consistency, you can define a whitelist of acceptable values using the ",(0,a.yg)("inlineCode",{parentName:"p"},"allowedValues")," array. Each allowed value can include:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"value"),": The actual value (string or number)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"description"),": An explanation of what this value represents")),(0,a.yg)("p",null,"When allowed values are defined, the system validates that any property value assignment matches one of the allowed values."),(0,a.yg)("h4",{id:"immutability"},"Immutability"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"immutable")," field (default: ",(0,a.yg)("inlineCode",{parentName:"p"},"false"),") determines whether a property value can be changed once set. When ",(0,a.yg)("inlineCode",{parentName:"p"},"true"),", the property value becomes permanent and cannot be modified or removed, ensuring data integrity for critical metadata."),(0,a.yg)("h4",{id:"versioning"},"Versioning"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"version")," field enables breaking schema changes by allowing you to update the property definition in backwards-incompatible ways. Versions must follow the format ",(0,a.yg)("inlineCode",{parentName:"p"},"yyyyMMddhhmmss")," (e.g., ",(0,a.yg)("inlineCode",{parentName:"p"},"20240614080000"),"). When a new version is applied:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Old values with the previous schema become inaccessible"),(0,a.yg)("li",{parentName:"ul"},"New values must conform to the updated schema"),(0,a.yg)("li",{parentName:"ul"},"The old values are subject to asynchronous deletion")),(0,a.yg)("h3",{id:"display-settings"},"Display Settings"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"structuredPropertySettings")," aspect controls how properties appear in the DataHub UI:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"isHidden"),": When ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", the property is not visible in the UI (useful for internal metadata)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"showInSearchFilters"),": When ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", users can filter search results by this property's values"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"showInAssetSummary"),": When ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", displays the property in the asset's sidebar"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"hideInAssetSummaryWhenEmpty"),": When ",(0,a.yg)("inlineCode",{parentName:"li"},"true")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"showInAssetSummary")," is enabled, hides the property from the sidebar when it has no value"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"showAsAssetBadge"),": When ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", displays the property value as a badge on the asset card (only available for string/number types with allowed values)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"showInColumnsTable"),": When ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),", displays the property as a column in dataset schema tables (useful for column-level properties)")),(0,a.yg)("h3",{id:"common-aspects"},"Common Aspects"),(0,a.yg)("p",null,"Structured properties also support standard DataHub aspects:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"status"),": Enables soft deletion by setting ",(0,a.yg)("inlineCode",{parentName:"li"},"removed: true"),", which hides the property without deleting underlying data"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"institutionalMemory"),": Allows attaching documentation links explaining the property's purpose and usage"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"deprecation"),": Can mark properties as deprecated while preserving historical data")),(0,a.yg)("h2",{id:"code-examples"},"Code Examples"),(0,a.yg)("h3",{id:"create-a-structured-property"},"Create a Structured Property"),(0,a.yg)("p",null,"This example creates a structured property for tracking data retention time with numeric values and validation:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Create a structured property with allowed values"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'import os\n\nfrom datahub.api.entities.structuredproperties.structuredproperties import (\n    AllowedValue,\n    StructuredProperties,\n)\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\n\n# Create a DataHub client\nclient = DataHubGraph(\n    DataHubGraphConfig(\n        server=os.getenv("DATAHUB_GMS_URL", "http://localhost:8080"),\n        token=os.getenv("DATAHUB_GMS_TOKEN"),\n    )\n)\n\n# Define a structured property for data retention time\nretention_property = StructuredProperties(\n    id="io.acryl.privacy.retentionTime",\n    qualified_name="io.acryl.privacy.retentionTime",\n    display_name="Retention Time",\n    type="number",\n    description="Number of days to retain data based on privacy and compliance requirements",\n    entity_types=["dataset", "dataFlow"],\n    cardinality="SINGLE",\n    allowed_values=[\n        AllowedValue(\n            value=30.0,\n            description="30 days - for ephemeral data containing PII",\n        ),\n        AllowedValue(\n            value=90.0,\n            description="90 days - for monthly reporting data with PII",\n        ),\n        AllowedValue(\n            value=365.0,\n            description="365 days - for non-sensitive data",\n        ),\n    ],\n)\n\n# Emit the structured property to DataHub\nfor mcp in retention_property.generate_mcps():\n    client.emit(mcp)\n\nprint(f"Created structured property: {retention_property.urn}")\n\n'))),(0,a.yg)("h3",{id:"create-a-structured-property-with-entity-type-restrictions"},"Create a Structured Property with Entity Type Restrictions"),(0,a.yg)("p",null,"This example creates a property that accepts URN values but only allows references to users and groups:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Create a structured property with type qualifiers"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'from datahub.api.entities.structuredproperties.structuredproperties import (\n    StructuredProperties,\n    TypeQualifierAllowedTypes,\n)\nfrom datahub.ingestion.graph.client import DatahubClientConfig, DataHubGraph\n\n# Create a DataHub client\nclient = DataHubGraph(DatahubClientConfig(server="http://localhost:8080"))\n\n# Define a structured property that references DataHub entities\n# This property can only reference CorpUser or CorpGroup entities\ndata_steward_property = StructuredProperties(\n    id="io.acryl.governance.dataSteward",\n    qualified_name="io.acryl.governance.dataSteward",\n    display_name="Data Steward",\n    type="urn",\n    description="The designated data steward responsible for this asset\'s governance and quality",\n    entity_types=["dataset", "dashboard", "chart", "dataJob"],\n    cardinality="SINGLE",\n    type_qualifier=TypeQualifierAllowedTypes(\n        allowed_types=[\n            "urn:li:entityType:datahub.corpuser",\n            "urn:li:entityType:datahub.corpGroup",\n        ]\n    ),\n)\n\n# Emit the structured property to DataHub\nfor mcp in data_steward_property.generate_mcps():\n    client.emit_mcp(mcp)\n\nprint(f"Created structured property: {data_steward_property.urn}")\n\n# Example: Create a multi-value property for related datasets\nrelated_datasets_property = StructuredProperties(\n    id="io.acryl.lineage.relatedDatasets",\n    qualified_name="io.acryl.lineage.relatedDatasets",\n    display_name="Related Datasets",\n    type="urn",\n    description="Other datasets that are semantically or functionally related to this asset",\n    entity_types=["dataset"],\n    cardinality="MULTIPLE",\n    type_qualifier=TypeQualifierAllowedTypes(\n        allowed_types=["urn:li:entityType:datahub.dataset"]\n    ),\n)\n\n# Emit the second structured property\nfor mcp in related_datasets_property.generate_mcps():\n    client.emit_mcp(mcp)\n\nprint(f"Created structured property: {related_datasets_property.urn}")\n\n'))),(0,a.yg)("h3",{id:"apply-structured-properties-to-entities"},"Apply Structured Properties to Entities"),(0,a.yg)("p",null,"Once structured properties are defined, you can assign them to entities:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Apply structured properties to a dataset"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'import logging\n\nfrom datahub.emitter.mce_builder import make_dataset_urn\nfrom datahub.emitter.rest_emitter import DataHubRestEmitter\nfrom datahub.specific.dataset import DatasetPatchBuilder\n\nlog = logging.getLogger(__name__)\nlogging.basicConfig(level=logging.INFO)\n\n# Create rest emitter\nrest_emitter = DataHubRestEmitter(gms_server="http://localhost:8080")\n\ndataset_urn = make_dataset_urn(platform="hive", name="fct_users_created", env="PROD")\n\n\nfor patch_mcp in (\n    DatasetPatchBuilder(dataset_urn)\n    .set_structured_property("io.acryl.dataManagement.replicationSLA", 120)\n    .build()\n):\n    rest_emitter.emit(patch_mcp)\n\n\nlog.info(f"Added cluster_name, retention_time properties to dataset {dataset_urn}")\n\n'))),(0,a.yg)("h3",{id:"patch-operations-on-structured-properties"},"Patch Operations on Structured Properties"),(0,a.yg)("p",null,"For more granular control, use patch operations to add or remove individual properties:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Add and remove structured properties using patches"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'from datahub.emitter.mce_builder import make_dataset_urn\nfrom datahub.ingestion.graph.client import DataHubGraph, DataHubGraphConfig\nfrom datahub.specific.dataset import DatasetPatchBuilder\n\n# Create DataHub Client\ndatahub_client = DataHubGraph(DataHubGraphConfig(server="http://localhost:8080"))\n\n# Create Dataset URN\ndataset_urn = make_dataset_urn(platform="hive", name="fct_users_created", env="PROD")\n\n# Create Dataset Patch to Add and Remove Structured Properties\npatch_builder = DatasetPatchBuilder(dataset_urn)\npatch_builder.add_structured_property(\n    "urn:li:structuredProperty:retentionTimeInDays", 12\n)\npatch_builder.remove_structured_property(\n    "urn:li:structuredProperty:customClassification"\n)\npatch_mcps = patch_builder.build()\n\n# Emit Dataset Patch\nfor patch_mcp in patch_mcps:\n    datahub_client.emit(patch_mcp)\n\n'))),(0,a.yg)("h3",{id:"query-structured-property-definitions"},"Query Structured Property Definitions"),(0,a.yg)("p",null,"Retrieve structured property definitions to understand their configuration:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Python SDK: Query a structured property"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'from datahub.api.entities.structuredproperties.structuredproperties import (\n    StructuredProperties,\n)\nfrom datahub.ingestion.graph.client import DatahubClientConfig, DataHubGraph\n\n# Create a DataHub client\nclient = DataHubGraph(DatahubClientConfig(server="http://localhost:8080"))\n\n# List all structured properties in the system\nprint("Listing all structured properties:")\nprint("-" * 80)\n\nfor structured_property in StructuredProperties.list(client):\n    print(f"\\nURN: {structured_property.urn}")\n    print(f"Display Name: {structured_property.display_name}")\n    print(f"Type: {structured_property.type}")\n    print(f"Cardinality: {structured_property.cardinality}")\n    print(f"Entity Types: {\', \'.join(structured_property.entity_types or [])}")\n\n    if structured_property.allowed_values:\n        print("Allowed Values:")\n        for av in structured_property.allowed_values:\n            print(f"  - {av.value}: {av.description}")\n\n# Retrieve a specific structured property by URN\nprint("\\n" + "=" * 80)\nprint("Retrieving specific structured property:")\nprint("-" * 80)\n\nproperty_urn = "urn:li:structuredProperty:io.acryl.privacy.retentionTime"\n\ntry:\n    specific_property = StructuredProperties.from_datahub(client, property_urn)\n\n    print(f"\\nURN: {specific_property.urn}")\n    print(f"Qualified Name: {specific_property.qualified_name}")\n    print(f"Display Name: {specific_property.display_name}")\n    print(f"Description: {specific_property.description}")\n    print(f"Type: {specific_property.type}")\n    print(f"Cardinality: {specific_property.cardinality}")\n    print(f"Immutable: {specific_property.immutable}")\n    print(f"Entity Types: {\', \'.join(specific_property.entity_types or [])}")\n\n    if specific_property.allowed_values:\n        print("\\nAllowed Values:")\n        for av in specific_property.allowed_values:\n            print(f"  - {av.value}: {av.description}")\n\n    if specific_property.type_qualifier:\n        print("\\nType Qualifier - Allowed Entity Types:")\n        for entity_type in specific_property.type_qualifier.allowed_types:\n            print(f"  - {entity_type}")\n\nexcept Exception as e:\n    print(f"Error retrieving structured property: {e}")\n\n# Example: List just the URNs (for scripting)\nprint("\\n" + "=" * 80)\nprint("All structured property URNs:")\nprint("-" * 80)\n\nfor urn in StructuredProperties.list_urns(client):\n    print(urn)\n\n'))),(0,a.yg)("h3",{id:"query-via-rest-api"},"Query via REST API"),(0,a.yg)("p",null,"You can also retrieve structured property definitions using the REST API:"),(0,a.yg)("details",null,(0,a.yg)("summary",null,"REST API: Get structured property definition"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X 'GET' \\\n  'http://localhost:8080/openapi/v3/entity/structuredProperty/urn%3Ali%3AstructuredProperty%3Aio.acryl.privacy.retentionTime/propertyDefinition' \\\n  -H 'accept: application/json'\n")),(0,a.yg)("p",null,"Example Response:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "urn": "urn:li:structuredProperty:io.acryl.privacy.retentionTime",\n  "propertyDefinition": {\n    "value": {\n      "qualifiedName": "io.acryl.privacy.retentionTime",\n      "displayName": "Retention Time",\n      "valueType": "urn:li:dataType:datahub.number",\n      "description": "Number of days to retain data",\n      "entityTypes": ["urn:li:entityType:datahub.dataset"],\n      "cardinality": "SINGLE",\n      "allowedValues": [\n        {\n          "value": { "double": 30 },\n          "description": "30 days for ephemeral data"\n        },\n        {\n          "value": { "double": 90 },\n          "description": "90 days for regular data"\n        }\n      ]\n    }\n  }\n}\n'))),(0,a.yg)("h2",{id:"integration-points"},"Integration Points"),(0,a.yg)("h3",{id:"how-structured-properties-relate-to-other-entities"},"How Structured Properties Relate to Other Entities"),(0,a.yg)("p",null,"Structured properties enable flexible metadata extension across the entire DataHub ecosystem:"),(0,a.yg)("h4",{id:"applied-to-core-data-assets"},"Applied to Core Data Assets"),(0,a.yg)("p",null,"Structured properties can be attached to any core data asset:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Datasets"),": Track data quality metrics, retention policies, or compliance classifications"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Schema Fields"),": Add business glossary terms, sensitivity labels, or validation rules at the column level"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Charts and Dashboards"),": Capture certification status, review dates, or usage guidelines"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Data Jobs and Pipelines"),": Record SLA requirements, criticality levels, or maintenance schedules")),(0,a.yg)("h4",{id:"applied-to-organizational-entities"},"Applied to Organizational Entities"),(0,a.yg)("p",null,"Properties also extend to organizational and governance entities:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Domains"),": Track ownership model, maturity level, or strategic importance"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Glossary Terms"),": Add approval status, version numbers, or related regulations"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Data Products"),": Capture product lifecycle stage, target audience, or support tier"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Users and Groups"),": Store employee IDs, cost centers, or access review dates")),(0,a.yg)("h4",{id:"relationship-with-forms"},"Relationship with Forms"),(0,a.yg)("p",null,"Structured properties work in conjunction with DataHub Forms to enable:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Compliance workflows"),": Forms can collect structured property values to ensure policy compliance"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Bulk updates"),": Forms allow updating structured properties across multiple assets simultaneously"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Validation"),": Forms enforce property constraints during data collection")),(0,a.yg)("h4",{id:"search-and-discovery"},"Search and Discovery"),(0,a.yg)("p",null,"Structured properties enhance search capabilities:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Properties marked with ",(0,a.yg)("inlineCode",{parentName:"li"},"showInSearchFilters: true")," become available as faceted search filters"),(0,a.yg)("li",{parentName:"ul"},"Users can filter results by property values to find assets meeting specific criteria"),(0,a.yg)("li",{parentName:"ul"},"Aggregation queries can summarize property value distributions across your data landscape")),(0,a.yg)("h4",{id:"graphql-resolvers"},"GraphQL Resolvers"),(0,a.yg)("p",null,"The GraphQL layer exposes structured properties through several resolvers:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"CreateStructuredPropertyResolver"),": Creates new structured property definitions"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"UpdateStructuredPropertyResolver"),": Modifies existing property definitions (within allowed constraints)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"DeleteStructuredPropertyResolver"),": Removes structured property definitions"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"UpsertStructuredPropertiesResolver"),": Assigns property values to entities"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"RemoveStructuredPropertiesResolver"),": Removes property values from entities")),(0,a.yg)("p",null,"These resolvers are located in ",(0,a.yg)("inlineCode",{parentName:"p"},"/datahub-graphql-core/src/main/java/com/linkedin/datahub/graphql/resolvers/structuredproperties/"),"."),(0,a.yg)("h2",{id:"notable-exceptions"},"Notable Exceptions"),(0,a.yg)("h3",{id:"property-definition-constraints"},"Property Definition Constraints"),(0,a.yg)("p",null,"Once a structured property is created and in use, certain fields cannot be modified to prevent data inconsistency:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Immutable Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"valueType"),": Cannot change the data type (e.g., from string to number)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"allowedValues"),": Cannot remove or modify existing allowed values (can only add new ones)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"cardinality"),": Cannot change between SINGLE and MULTIPLE without a version bump")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Modifiable Fields:")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"displayName"),": Can be updated for better readability"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"description"),": Can be enhanced or clarified"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"entityTypes"),": Can add new entity types (but not remove existing ones)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"allowedValues"),": Can append additional allowed values"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Display settings"),": All ",(0,a.yg)("inlineCode",{parentName:"li"},"structuredPropertySettings")," can be freely modified")),(0,a.yg)("h3",{id:"breaking-changes-with-versioning"},"Breaking Changes with Versioning"),(0,a.yg)("p",null,"To make backwards-incompatible changes (like changing cardinality or removing allowed values), you must:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Set a new ",(0,a.yg)("inlineCode",{parentName:"li"},"version")," value in format ",(0,a.yg)("inlineCode",{parentName:"li"},"yyyyMMddhhmmss")),(0,a.yg)("li",{parentName:"ol"},"Apply the updated definition"),(0,a.yg)("li",{parentName:"ol"},"Accept that old values will become inaccessible"),(0,a.yg)("li",{parentName:"ol"},"Re-apply property values with the new schema")),(0,a.yg)("p",null,"This is a destructive operation and should be carefully planned."),(0,a.yg)("h3",{id:"soft-delete-vs-hard-delete"},"Soft Delete vs Hard Delete"),(0,a.yg)("p",null,"Structured properties support two deletion modes:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Soft Delete")," (via ",(0,a.yg)("inlineCode",{parentName:"p"},"status")," aspect with ",(0,a.yg)("inlineCode",{parentName:"p"},"removed: true"),"):"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Property definition remains in the system"),(0,a.yg)("li",{parentName:"ul"},"Property values are hidden but not deleted"),(0,a.yg)("li",{parentName:"ul"},"Assignment of new values is blocked"),(0,a.yg)("li",{parentName:"ul"},"Search filters using the property are disabled"),(0,a.yg)("li",{parentName:"ul"},"Fully reversible by setting ",(0,a.yg)("inlineCode",{parentName:"li"},"removed: false"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Hard Delete")," (via entity deletion):"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Removes the property definition entity completely"),(0,a.yg)("li",{parentName:"ul"},"Triggers asynchronous removal of all property values across all entities"),(0,a.yg)("li",{parentName:"ul"},"Not reversible"),(0,a.yg)("li",{parentName:"ul"},"Elasticsearch mappings persist until reindexing occurs")),(0,a.yg)("h3",{id:"column-level-properties"},"Column-Level Properties"),(0,a.yg)("p",null,"When creating properties for schema fields (columns), be aware:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Setting ",(0,a.yg)("inlineCode",{parentName:"li"},"showInColumnsTable: true")," displays the property in all dataset schema views"),(0,a.yg)("li",{parentName:"ul"},"Column-level properties automatically appear in the column sidebar"),(0,a.yg)("li",{parentName:"ul"},"Too many visible properties can clutter the UI, so use display settings judiciously")),(0,a.yg)("h3",{id:"search-indexing"},"Search Indexing"),(0,a.yg)("p",null,"Structured property values are indexed in Elasticsearch using a special naming convention:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Unversioned"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"structuredProperties.io_acryl_privacy_retentionTime")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Versioned"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"structuredProperties._versioned.io_acryl_privacy_retentionTime02.20240614080000.string"))),(0,a.yg)("p",null,"Understanding this convention is important for:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Advanced search queries using the OpenAPI"),(0,a.yg)("li",{parentName:"ul"},"Debugging search issues"),(0,a.yg)("li",{parentName:"ul"},"Creating custom aggregations")),(0,a.yg)("p",null,"For more information, refer to:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/features/feature-guides/properties/overview"},"Structured Properties Feature Guide")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/api/tutorials/structured-properties"},"Structured Properties API Tutorial"))),(0,a.yg)("h2",{id:"technical-reference"},"Technical Reference"),(0,a.yg)("p",null,"For technical details about fields, searchability, and relationships, view the ",(0,a.yg)("strong",{parentName:"p"},"Columns")," tab in DataHub."))}m.isMDXComponent=!0}}]);